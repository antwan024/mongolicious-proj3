{"ast":null,"code":"import _defineProperty from \"/Users/antwan/Documents/School/p3/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/antwan/Documents/School/p3/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antwan/Documents/School/p3/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antwan/Documents/School/p3/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antwan/Documents/School/p3/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antwan/Documents/School/p3/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antwan/Documents/School/p3/Solved/client/src/pages/Achievements.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nvar Achievment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Achievment, _Component);\n\n  function Achievment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Achievment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Achievment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      achivements: [],\n      type: \"\",\n      achivementPoints: 0,\n      summary: \"\",\n      date: \"\",\n      earned: \"\"\n    };\n\n    _this.loadAchievments = function () {\n      API.getAchievments().then(function (res) {\n        return _this.setState({\n          achievments: res.data,\n          type: \"\",\n          achivementPoints: 0,\n          summary: \"\",\n          date: \"\",\n          earned: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteAchievment = function (id) {\n      API.deleteAchievement(id).then(function (res) {\n        return _this.loadAchievments();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    return _this;\n  }\n\n  _createClass(Achievment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadAchiievments();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Achievments\")), this.state.achievments.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.state.achievments.map(function (achievement) {\n        return React.createElement(ListItem, {\n          key: achievments._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/achiements/\" + achievments._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Need: \", achievments.achivementPoints, \" \", achievments.summary, \"Achievment: \", achivement.summary)), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deleteAchievment(achievments._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Achievment;\n}(Component);\n\nexport default Achievments;","map":{"version":3,"sources":["/Users/antwan/Documents/School/p3/Solved/client/src/pages/Achievements.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Achievment","state","achivements","type","achivementPoints","summary","date","earned","loadAchievments","getAchievments","then","res","setState","achievments","data","catch","err","console","log","deleteAchievment","id","deleteAchievement","handleInputChange","event","target","name","value","loadAchiievments","length","map","achievement","_id","achivement","Achievments"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nclass Achievment extends Component {\n  state = {\n    achivements: [],\n    type: \"\",\n    achivementPoints: 0,\n    summary: \"\",\n    date: \"\",\n    earned: \"\"\n  };\n\n  componentDidMount() {\n    this.loadAchiievments();\n  }\n\n  loadAchievments = () => {\n    API.getAchievments()\n      .then(res =>\n        this.setState({ achievments: res.data, type: \"\", achivementPoints: 0, summary: \"\", date: \"\", earned: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteAchievment = id => {\n    API.deleteAchievement(id)\n      .then(res => this.loadAchievments())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  \n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Achievments</h1>\n            </Jumbotron>\n            {this.state.achievments.length ? (\n              <List>\n                {this.state.achievments.map(achievement => (\n                  <ListItem key={achievments._id}>\n                    <Link to={\"/achiements/\" + achievments._id}>\n                      <strong>\n                        Need: {achievments.achivementPoints} {achievments.summary}\n                        Achievment: {achivement.summary}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => this.deleteAchievment(achievments._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Achievments;\n"]},"metadata":{},"sourceType":"module"}